DEBUG - BUILD TIMESTAMP = null
DEBUG - Config Propeties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:236) [Here are the stack configuration properties 
{}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:238) [ ]]>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:239) [</debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:240) [<description
 logDescription="stack"
 name="null" />
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:242) [<debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:243) [<![CDATA[ ]
INFO - value -1000 will be used for reliableConnectionKeepAliveTimeout stack property
INFO - Setting Stack Thread priority to 10
WARN - using default tls security policy
WARN - Using default keystore type pkcs12
WARN - TLS server settings will be inactive - TLS key store will use JVM defaults keyStoreType=pkcs12 javax.net.ssl.keyStore=null javax.net.ssl.keyStorePassword=null
INFO - javax.net.ssl.trustStorePassword is null, using the password passed through javax.net.ssl.keyStorePassword
WARN - Using default truststore type pkcs12
WARN - TLS trust settings will be inactive - TLS trust store will use JVM defaults. trustStoreType=pkcs12 javax.net.ssl.trustStore=null javax.net.ssl.trustStorePassword=null
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:82) [SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider will use algorithm SunX509]
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:105) [TLS settings OK. SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider initialized.]
DEBUG - gov.nist.javax.sip.SipStackImpl.<init>(SipStackImpl.java:1432) [created Sip stack. Properties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}]
INFO - the sip stack timer gov.nist.javax.sip.stack.timers.DefaultSipTimer has been started
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1622) [createListeningPoint : address = 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.UDPMessageProcessor.<init>(UDPMessageProcessor.java:132) [Max Message size is 65536]
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1660) [Created Message Processor: 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.MessageProcessor.setListeningPoint(MessageProcessor.java:203) [setListeningPointgov.nist.javax.sip.stack.UDPMessageProcessor@72d1ad2e listeningPoint = gov.nist.javax.sip.ListeningPointImpl@2d7275fc]
DEBUG - gov.nist.javax.sip.SipStackImpl.createSipProvider(SipStackImpl.java:1692) [createSipProvider: gov.nist.javax.sip.ListeningPointImpl@2d7275fc]
DEBUG - gov.nist.javax.sip.SipProviderImpl.addSipListener(SipProviderImpl.java:226) [add SipListener com.sip.SipClient@36902638]
DEBUG - BUILD TIMESTAMP = null
DEBUG - Config Propeties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:236) [Here are the stack configuration properties 
{}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:238) [ ]]>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:239) [</debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:240) [<description
 logDescription="stack"
 name="null" />
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:242) [<debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:243) [<![CDATA[ ]
INFO - value -1000 will be used for reliableConnectionKeepAliveTimeout stack property
INFO - Setting Stack Thread priority to 10
WARN - using default tls security policy
WARN - Using default keystore type pkcs12
WARN - TLS server settings will be inactive - TLS key store will use JVM defaults keyStoreType=pkcs12 javax.net.ssl.keyStore=null javax.net.ssl.keyStorePassword=null
INFO - javax.net.ssl.trustStorePassword is null, using the password passed through javax.net.ssl.keyStorePassword
WARN - Using default truststore type pkcs12
WARN - TLS trust settings will be inactive - TLS trust store will use JVM defaults. trustStoreType=pkcs12 javax.net.ssl.trustStore=null javax.net.ssl.trustStorePassword=null
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:82) [SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider will use algorithm SunX509]
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:105) [TLS settings OK. SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider initialized.]
DEBUG - gov.nist.javax.sip.SipStackImpl.<init>(SipStackImpl.java:1432) [created Sip stack. Properties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}]
INFO - the sip stack timer gov.nist.javax.sip.stack.timers.DefaultSipTimer has been started
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1622) [createListeningPoint : address = 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.UDPMessageProcessor.<init>(UDPMessageProcessor.java:132) [Max Message size is 65536]
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1660) [Created Message Processor: 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.MessageProcessor.setListeningPoint(MessageProcessor.java:203) [setListeningPointgov.nist.javax.sip.stack.UDPMessageProcessor@7e07db1f listeningPoint = gov.nist.javax.sip.ListeningPointImpl@1189dd52]
DEBUG - gov.nist.javax.sip.SipStackImpl.createSipProvider(SipStackImpl.java:1692) [createSipProvider: gov.nist.javax.sip.ListeningPointImpl@1189dd52]
DEBUG - gov.nist.javax.sip.SipProviderImpl.addSipListener(SipProviderImpl.java:226) [add SipListener com.sip.SipClient@158d2680]
DEBUG - BUILD TIMESTAMP = null
DEBUG - Config Propeties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:236) [Here are the stack configuration properties 
{}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:238) [ ]]>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:239) [</debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:240) [<description
 logDescription="stack"
 name="null" />
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:242) [<debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:243) [<![CDATA[ ]
INFO - value -1000 will be used for reliableConnectionKeepAliveTimeout stack property
INFO - Setting Stack Thread priority to 10
WARN - using default tls security policy
WARN - Using default keystore type pkcs12
WARN - TLS server settings will be inactive - TLS key store will use JVM defaults keyStoreType=pkcs12 javax.net.ssl.keyStore=null javax.net.ssl.keyStorePassword=null
INFO - javax.net.ssl.trustStorePassword is null, using the password passed through javax.net.ssl.keyStorePassword
WARN - Using default truststore type pkcs12
WARN - TLS trust settings will be inactive - TLS trust store will use JVM defaults. trustStoreType=pkcs12 javax.net.ssl.trustStore=null javax.net.ssl.trustStorePassword=null
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:82) [SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider will use algorithm SunX509]
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:105) [TLS settings OK. SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider initialized.]
DEBUG - gov.nist.javax.sip.SipStackImpl.<init>(SipStackImpl.java:1432) [created Sip stack. Properties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}]
INFO - the sip stack timer gov.nist.javax.sip.stack.timers.DefaultSipTimer has been started
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1622) [createListeningPoint : address = 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.UDPMessageProcessor.<init>(UDPMessageProcessor.java:132) [Max Message size is 65536]
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1660) [Created Message Processor: 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.MessageProcessor.setListeningPoint(MessageProcessor.java:203) [setListeningPointgov.nist.javax.sip.stack.UDPMessageProcessor@139982de listeningPoint = gov.nist.javax.sip.ListeningPointImpl@682b2fa]
DEBUG - gov.nist.javax.sip.SipStackImpl.createSipProvider(SipStackImpl.java:1692) [createSipProvider: gov.nist.javax.sip.ListeningPointImpl@682b2fa]
DEBUG - gov.nist.javax.sip.SipProviderImpl.addSipListener(SipProviderImpl.java:226) [add SipListener com.sip.SipClient@1e800aaa]
DEBUG - BUILD TIMESTAMP = null
DEBUG - Config Propeties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:236) [Here are the stack configuration properties 
{}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:238) [ ]]>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:239) [</debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:240) [<description
 logDescription="stack"
 name="null" />
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:242) [<debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:243) [<![CDATA[ ]
INFO - value -1000 will be used for reliableConnectionKeepAliveTimeout stack property
INFO - Setting Stack Thread priority to 10
WARN - using default tls security policy
WARN - Using default keystore type pkcs12
WARN - TLS server settings will be inactive - TLS key store will use JVM defaults keyStoreType=pkcs12 javax.net.ssl.keyStore=null javax.net.ssl.keyStorePassword=null
INFO - javax.net.ssl.trustStorePassword is null, using the password passed through javax.net.ssl.keyStorePassword
WARN - Using default truststore type pkcs12
WARN - TLS trust settings will be inactive - TLS trust store will use JVM defaults. trustStoreType=pkcs12 javax.net.ssl.trustStore=null javax.net.ssl.trustStorePassword=null
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:82) [SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider will use algorithm SunX509]
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:105) [TLS settings OK. SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider initialized.]
DEBUG - gov.nist.javax.sip.SipStackImpl.<init>(SipStackImpl.java:1432) [created Sip stack. Properties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}]
INFO - the sip stack timer gov.nist.javax.sip.stack.timers.DefaultSipTimer has been started
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1622) [createListeningPoint : address = 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.UDPMessageProcessor.<init>(UDPMessageProcessor.java:132) [Max Message size is 65536]
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1660) [Created Message Processor: 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.MessageProcessor.setListeningPoint(MessageProcessor.java:203) [setListeningPointgov.nist.javax.sip.stack.UDPMessageProcessor@7e07db1f listeningPoint = gov.nist.javax.sip.ListeningPointImpl@1189dd52]
DEBUG - gov.nist.javax.sip.SipStackImpl.createSipProvider(SipStackImpl.java:1692) [createSipProvider: gov.nist.javax.sip.ListeningPointImpl@1189dd52]
DEBUG - gov.nist.javax.sip.SipProviderImpl.addSipListener(SipProviderImpl.java:226) [add SipListener com.sip.SipClient@158d2680]
DEBUG - BUILD TIMESTAMP = null
DEBUG - Config Propeties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:236) [Here are the stack configuration properties 
{}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:238) [ ]]>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:239) [</debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:240) [<description
 logDescription="stack"
 name="null" />
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:242) [<debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:243) [<![CDATA[ ]
INFO - value -1000 will be used for reliableConnectionKeepAliveTimeout stack property
INFO - Setting Stack Thread priority to 10
WARN - using default tls security policy
WARN - Using default keystore type pkcs12
WARN - TLS server settings will be inactive - TLS key store will use JVM defaults keyStoreType=pkcs12 javax.net.ssl.keyStore=null javax.net.ssl.keyStorePassword=null
INFO - javax.net.ssl.trustStorePassword is null, using the password passed through javax.net.ssl.keyStorePassword
WARN - Using default truststore type pkcs12
WARN - TLS trust settings will be inactive - TLS trust store will use JVM defaults. trustStoreType=pkcs12 javax.net.ssl.trustStore=null javax.net.ssl.trustStorePassword=null
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:82) [SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider will use algorithm SunX509]
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:105) [TLS settings OK. SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider initialized.]
DEBUG - gov.nist.javax.sip.SipStackImpl.<init>(SipStackImpl.java:1432) [created Sip stack. Properties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}]
INFO - the sip stack timer gov.nist.javax.sip.stack.timers.DefaultSipTimer has been started
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1622) [createListeningPoint : address = 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.UDPMessageProcessor.<init>(UDPMessageProcessor.java:132) [Max Message size is 65536]
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1660) [Created Message Processor: 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.MessageProcessor.setListeningPoint(MessageProcessor.java:203) [setListeningPointgov.nist.javax.sip.stack.UDPMessageProcessor@478190fc listeningPoint = gov.nist.javax.sip.ListeningPointImpl@79e2c065]
DEBUG - gov.nist.javax.sip.SipStackImpl.createSipProvider(SipStackImpl.java:1692) [createSipProvider: gov.nist.javax.sip.ListeningPointImpl@79e2c065]
DEBUG - gov.nist.javax.sip.SipProviderImpl.addSipListener(SipProviderImpl.java:226) [add SipListener com.sip.SipClient@74fe5c40]
DEBUG - BUILD TIMESTAMP = null
DEBUG - Config Propeties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:236) [Here are the stack configuration properties 
{}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:238) [ ]]>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:239) [</debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:240) [<description
 logDescription="stack"
 name="null" />
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:242) [<debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:243) [<![CDATA[ ]
INFO - value -1000 will be used for reliableConnectionKeepAliveTimeout stack property
INFO - Setting Stack Thread priority to 10
WARN - using default tls security policy
WARN - Using default keystore type pkcs12
WARN - TLS server settings will be inactive - TLS key store will use JVM defaults keyStoreType=pkcs12 javax.net.ssl.keyStore=null javax.net.ssl.keyStorePassword=null
INFO - javax.net.ssl.trustStorePassword is null, using the password passed through javax.net.ssl.keyStorePassword
WARN - Using default truststore type pkcs12
WARN - TLS trust settings will be inactive - TLS trust store will use JVM defaults. trustStoreType=pkcs12 javax.net.ssl.trustStore=null javax.net.ssl.trustStorePassword=null
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:82) [SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider will use algorithm SunX509]
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:105) [TLS settings OK. SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider initialized.]
DEBUG - gov.nist.javax.sip.SipStackImpl.<init>(SipStackImpl.java:1432) [created Sip stack. Properties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}]
INFO - the sip stack timer gov.nist.javax.sip.stack.timers.DefaultSipTimer has been started
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1622) [createListeningPoint : address = 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.UDPMessageProcessor.<init>(UDPMessageProcessor.java:132) [Max Message size is 65536]
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1660) [Created Message Processor: 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.MessageProcessor.setListeningPoint(MessageProcessor.java:203) [setListeningPointgov.nist.javax.sip.stack.UDPMessageProcessor@8f4ea7c listeningPoint = gov.nist.javax.sip.ListeningPointImpl@436813f3]
DEBUG - gov.nist.javax.sip.SipStackImpl.createSipProvider(SipStackImpl.java:1692) [createSipProvider: gov.nist.javax.sip.ListeningPointImpl@436813f3]
DEBUG - gov.nist.javax.sip.SipProviderImpl.addSipListener(SipProviderImpl.java:226) [add SipListener com.sip.SipClient@6adbc9d]
DEBUG - BUILD TIMESTAMP = null
DEBUG - Config Propeties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:236) [Here are the stack configuration properties 
{}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:238) [ ]]>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:239) [</debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:240) [<description
 logDescription="stack"
 name="null" />
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:242) [<debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:243) [<![CDATA[ ]
INFO - value -1000 will be used for reliableConnectionKeepAliveTimeout stack property
INFO - Setting Stack Thread priority to 10
WARN - using default tls security policy
WARN - Using default keystore type pkcs12
WARN - TLS server settings will be inactive - TLS key store will use JVM defaults keyStoreType=pkcs12 javax.net.ssl.keyStore=null javax.net.ssl.keyStorePassword=null
INFO - javax.net.ssl.trustStorePassword is null, using the password passed through javax.net.ssl.keyStorePassword
WARN - Using default truststore type pkcs12
WARN - TLS trust settings will be inactive - TLS trust store will use JVM defaults. trustStoreType=pkcs12 javax.net.ssl.trustStore=null javax.net.ssl.trustStorePassword=null
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:82) [SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider will use algorithm SunX509]
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:105) [TLS settings OK. SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider initialized.]
DEBUG - gov.nist.javax.sip.SipStackImpl.<init>(SipStackImpl.java:1432) [created Sip stack. Properties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}]
INFO - the sip stack timer gov.nist.javax.sip.stack.timers.DefaultSipTimer has been started
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1622) [createListeningPoint : address = 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.UDPMessageProcessor.<init>(UDPMessageProcessor.java:132) [Max Message size is 65536]
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1660) [Created Message Processor: 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.MessageProcessor.setListeningPoint(MessageProcessor.java:203) [setListeningPointgov.nist.javax.sip.stack.UDPMessageProcessor@79e2c065 listeningPoint = gov.nist.javax.sip.ListeningPointImpl@3a93b025]
DEBUG - gov.nist.javax.sip.SipStackImpl.createSipProvider(SipStackImpl.java:1692) [createSipProvider: gov.nist.javax.sip.ListeningPointImpl@3a93b025]
DEBUG - gov.nist.javax.sip.SipProviderImpl.addSipListener(SipProviderImpl.java:226) [add SipListener com.sip.SipClient@3febb011]
DEBUG - BUILD TIMESTAMP = null
DEBUG - Config Propeties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:236) [Here are the stack configuration properties 
{}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:238) [ ]]>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:239) [</debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:240) [<description
 logDescription="stack"
 name="null" />
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:242) [<debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:243) [<![CDATA[ ]
INFO - value -1000 will be used for reliableConnectionKeepAliveTimeout stack property
INFO - Setting Stack Thread priority to 10
WARN - using default tls security policy
WARN - Using default keystore type pkcs12
WARN - TLS server settings will be inactive - TLS key store will use JVM defaults keyStoreType=pkcs12 javax.net.ssl.keyStore=null javax.net.ssl.keyStorePassword=null
INFO - javax.net.ssl.trustStorePassword is null, using the password passed through javax.net.ssl.keyStorePassword
WARN - Using default truststore type pkcs12
WARN - TLS trust settings will be inactive - TLS trust store will use JVM defaults. trustStoreType=pkcs12 javax.net.ssl.trustStore=null javax.net.ssl.trustStorePassword=null
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:82) [SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider will use algorithm SunX509]
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:105) [TLS settings OK. SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider initialized.]
DEBUG - gov.nist.javax.sip.SipStackImpl.<init>(SipStackImpl.java:1432) [created Sip stack. Properties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}]
INFO - the sip stack timer gov.nist.javax.sip.stack.timers.DefaultSipTimer has been started
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1622) [createListeningPoint : address = 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.UDPMessageProcessor.<init>(UDPMessageProcessor.java:132) [Max Message size is 65536]
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1660) [Created Message Processor: 127.0.0.1 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.MessageProcessor.setListeningPoint(MessageProcessor.java:203) [setListeningPointgov.nist.javax.sip.stack.UDPMessageProcessor@79e2c065 listeningPoint = gov.nist.javax.sip.ListeningPointImpl@3a93b025]
DEBUG - gov.nist.javax.sip.SipStackImpl.createSipProvider(SipStackImpl.java:1692) [createSipProvider: gov.nist.javax.sip.ListeningPointImpl@3a93b025]
DEBUG - gov.nist.javax.sip.SipProviderImpl.addSipListener(SipProviderImpl.java:226) [add SipListener com.sip.SipClient@3febb011]
DEBUG - BUILD TIMESTAMP = null
DEBUG - Config Propeties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:236) [Here are the stack configuration properties 
{}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:238) [ ]]>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:239) [</debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:240) [<description
 logDescription="stack"
 name="null" />
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:242) [<debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:243) [<![CDATA[ ]
INFO - value -1000 will be used for reliableConnectionKeepAliveTimeout stack property
INFO - Setting Stack Thread priority to 10
WARN - using default tls security policy
WARN - Using default keystore type pkcs12
WARN - TLS server settings will be inactive - TLS key store will use JVM defaults keyStoreType=pkcs12 javax.net.ssl.keyStore=null javax.net.ssl.keyStorePassword=null
INFO - javax.net.ssl.trustStorePassword is null, using the password passed through javax.net.ssl.keyStorePassword
WARN - Using default truststore type pkcs12
WARN - TLS trust settings will be inactive - TLS trust store will use JVM defaults. trustStoreType=pkcs12 javax.net.ssl.trustStore=null javax.net.ssl.trustStorePassword=null
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:82) [SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider will use algorithm SunX509]
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:105) [TLS settings OK. SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider initialized.]
DEBUG - gov.nist.javax.sip.SipStackImpl.<init>(SipStackImpl.java:1432) [created Sip stack. Properties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}]
INFO - the sip stack timer gov.nist.javax.sip.stack.timers.DefaultSipTimer has been started
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1622) [createListeningPoint : address = 10.22.78.18 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.UDPMessageProcessor.<init>(UDPMessageProcessor.java:132) [Max Message size is 65536]
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1660) [Created Message Processor: 10.22.78.18 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.MessageProcessor.setListeningPoint(MessageProcessor.java:203) [setListeningPointgov.nist.javax.sip.stack.UDPMessageProcessor@5c5eefef listeningPoint = gov.nist.javax.sip.ListeningPointImpl@16293aa2]
DEBUG - gov.nist.javax.sip.SipStackImpl.createSipProvider(SipStackImpl.java:1692) [createSipProvider: gov.nist.javax.sip.ListeningPointImpl@16293aa2]
DEBUG - gov.nist.javax.sip.stack.DefaultRouter.getNextHop(DefaultRouter.java:244) [Used request-URI for nextHop = phone1.icsoc.net:5091/UDP]
DEBUG - BUILD TIMESTAMP = null
DEBUG - Config Propeties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:236) [Here are the stack configuration properties 
{}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:238) [ ]]>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:239) [</debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:240) [<description
 logDescription="stack"
 name="null" />
]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:242) [<debug>]
DEBUG - gov.nist.javax.sip.stack.ServerLog.checkLogFile(ServerLog.java:243) [<![CDATA[ ]
INFO - value -1000 will be used for reliableConnectionKeepAliveTimeout stack property
INFO - Setting Stack Thread priority to 10
WARN - using default tls security policy
WARN - Using default keystore type pkcs12
WARN - TLS server settings will be inactive - TLS key store will use JVM defaults keyStoreType=pkcs12 javax.net.ssl.keyStore=null javax.net.ssl.keyStorePassword=null
INFO - javax.net.ssl.trustStorePassword is null, using the password passed through javax.net.ssl.keyStorePassword
WARN - Using default truststore type pkcs12
WARN - TLS trust settings will be inactive - TLS trust store will use JVM defaults. trustStoreType=pkcs12 javax.net.ssl.trustStore=null javax.net.ssl.trustStorePassword=null
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:82) [SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider will use algorithm SunX509]
DEBUG - gov.nist.core.net.DefaultSecurityManagerProvider.init(DefaultSecurityManagerProvider.java:105) [TLS settings OK. SecurityManagerProvider gov.nist.core.net.DefaultSecurityManagerProvider initialized.]
DEBUG - gov.nist.javax.sip.SipStackImpl.<init>(SipStackImpl.java:1432) [created Sip stack. Properties = {}{gov.nist.javax.sip.LOG_MESSAGE_CONTENT=true, gov.nist.javax.sip.SERVER_LOG=mss-jsip-messages.xml, gov.nist.javax.sip.TRACE_LEVEL=32, javax.sip.STACK_NAME=stack, gov.nist.javax.sip.DEBUG_LOG=mss-jsip-debuglog.txt}]
INFO - the sip stack timer gov.nist.javax.sip.stack.timers.DefaultSipTimer has been started
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1622) [createListeningPoint : address = 10.22.78.18 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.UDPMessageProcessor.<init>(UDPMessageProcessor.java:132) [Max Message size is 65536]
DEBUG - gov.nist.javax.sip.SipStackImpl.createListeningPoint(SipStackImpl.java:1660) [Created Message Processor: 10.22.78.18 port = 5060 transport = udp]
DEBUG - gov.nist.javax.sip.stack.MessageProcessor.setListeningPoint(MessageProcessor.java:203) [setListeningPointgov.nist.javax.sip.stack.UDPMessageProcessor@dd8ba08 listeningPoint = gov.nist.javax.sip.ListeningPointImpl@245b4bdc]
DEBUG - gov.nist.javax.sip.SipStackImpl.createSipProvider(SipStackImpl.java:1692) [createSipProvider: gov.nist.javax.sip.ListeningPointImpl@245b4bdc]
DEBUG - gov.nist.javax.sip.stack.DefaultRouter.getNextHop(DefaultRouter.java:244) [Used request-URI for nextHop = phone1.icsoc.net:5091/UDP]
